unit TestufTarefa1;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Variants, FireDAC.Stan.Error, Data.DB, FireDAC.Stan.Intf,
  Winapi.Windows, Vcl.Dialogs, FireDAC.Stan.Async, FireDAC.DatS, Vcl.Forms,
  FireDAC.Comp.DataSet, FireDAC.Stan.Param, FireDAC.Comp.Client, Vcl.Controls,
  FireDAC.Stan.Option, System.Classes, System.SysUtils, Winapi.Messages,
  FireDAC.DApt.Intf, Vcl.Graphics, FireDAC.DApt, Vcl.StdCtrls, uspQuery, ufTarefa1,
  FireDAC.Phys.Intf;

type
  // Test methods for class TfTarefa1

  TestTfTarefa1 = class(TTestCase)
  strict private
    FfTarefa1: TfTarefa1;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestButton1Click;
    procedure TestFormClose;
  end;

implementation

procedure TestTfTarefa1.SetUp;
begin
  FfTarefa1 := TfTarefa1.Create(Application);
end;

procedure TestTfTarefa1.TearDown;
begin
  FfTarefa1.Free;
  FfTarefa1 := nil;
end;

procedure TestTfTarefa1.TestButton1Click;
var
  Sender: TObject;
  okCod : Boolean;
begin
  FfTarefa1.spQuery1.spColunas.Add('COLUNA_A');
  FfTarefa1.spQuery1.spColunas.Add('COLUNA_B');

  FfTarefa1.spQuery1.spTabelas.Add('TABELA');

  FfTarefa1.spQuery1.spCondicoes.Add('ID = 1');
  FfTarefa1.spQuery1.spCondicoes.Add('NOME = ''ALE'' ');
  FfTarefa1.spQuery1.spCondicoes.Add('AND TIPO = 2');

  FfTarefa1.spQuery1.GeraSQL;

  okCod := FfTarefa1.spQuery1.SQL.Text =
           'SELECT'#$D#$A'  COLUNA_A,'#$D#$A'  COLUNA_B'#$D#$A'FROM'#$D#$A'  ' +
           'TABELA'#$D#$A'WHERE'#$D#$A'  ID = 1'#$D#$A'AND '#$D#$A'  NOME = ' +
           '''ALE'''#$D#$A'AND '#$D#$A'  TIPO = 2';

  if not okCod then
    raise Exception.Create('SQL Gerado fora do padrão');
end;

procedure TestTfTarefa1.TestFormClose;
var
  Action: TCloseAction;
  Sender: TObject;
begin
  FfTarefa1.FormClose(Sender, Action);
  if Action <> caFree then
    raise Exception.Create('Padrão para fanalizar o form não está correto!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfTarefa1.Suite);
end.

